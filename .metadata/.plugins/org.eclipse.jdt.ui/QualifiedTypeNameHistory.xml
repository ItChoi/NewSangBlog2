<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
<fullyQualifiedTypeName name="javax.persistence.OneToMany"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="com.blog.newsangblog2.manager.user.support.UserRole"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="javax.persistence.MappedSuperclass"/>
<fullyQualifiedTypeName name="javax.persistence.EntityListeners"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.domain.support.AuditingEntityListener"/>
<fullyQualifiedTypeName name="lombok.Builder"/>
<fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
<fullyQualifiedTypeName name="org.hibernate.annotations.UpdateTimestamp"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="com.blog.newsangblog2.common.domain.BaseUserEntity"/>
<fullyQualifiedTypeName name="com.blog.newsangblog2.common.domain.BaseDateTimeEntity"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
<fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
<fullyQualifiedTypeName name="com.blog.newsangblog2.exception.UserNotFoundException"/>
<fullyQualifiedTypeName name="javax.persistence.Enumerated"/>
<fullyQualifiedTypeName name="javax.persistence.EnumType"/>
<fullyQualifiedTypeName name="lombok.Getter"/>
<fullyQualifiedTypeName name="com.blog.newsangblog2.common.enumeration.UserRoleType"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
<fullyQualifiedTypeName name="org.springframework.ui.Model"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.web.WebApplicationInitializer"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="com.blog.newsangblog2.manager.user.service.ManagerUserService"/>
<fullyQualifiedTypeName name="org.junit.Test"/>
<fullyQualifiedTypeName name="com.blog.newsangblog2.manager.user.domain.Manager"/>
<fullyQualifiedTypeName name="lombok.Setter"/>
<fullyQualifiedTypeName name="javax.persistence.ManyToOne"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="javax.persistence.FetchType"/>
<fullyQualifiedTypeName name="org.hibernate.metamodel.model.convert.internal.JpaAttributeConverterImpl"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="com.blog.newsangblog2.manager.user.domain.UserRole"/>
<fullyQualifiedTypeName name="com.blog.newsangblog2.manager.user.repository.UserRoleRepository"/>
<fullyQualifiedTypeName name="org.junit.runner.RunWith"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.SecurityProperties.User"/>
<fullyQualifiedTypeName name="com.blog.newsangblog2.manager.user.service.UserService"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.factory.PasswordEncoderFactories"/>
<fullyQualifiedTypeName name="org.springframework.security.web.csrf.CookieCsrfTokenRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="org.springframework.util.StringUtils"/>
<fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
<fullyQualifiedTypeName name="org.junit.jupiter.api.AfterAll"/>
<fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
<fullyQualifiedTypeName name="org.springframework.test.context.junit4.SpringRunner"/>
<fullyQualifiedTypeName name="org.junit.jupiter.api.Assertions"/>
<fullyQualifiedTypeName name="org.junit.jupiter.api.extension.ExtendWith"/>
<fullyQualifiedTypeName name="org.springframework.test.context.junit.jupiter.SpringExtension"/>
<fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
</qualifiedTypeNameHistroy>
